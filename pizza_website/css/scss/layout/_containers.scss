/**
 * Layout / Containers
 *
 * Defines fixed-width and full-width containers for wrapping page content.
 * Uses breakpoints defined in _variables.scss.
 */

// Shared container styles
%container-base {
  width: 100%;
  // Use CSS variables for gutters, allowing runtime overrides
  padding-right: calc(var(--qc-gutter-x) * .5);
  padding-left: calc(var(--qc-gutter-x) * .5);
  margin-right: auto;
  margin-left: auto;
}

// Full-width container (spans entire viewport width)
.container-fluid {
  @extend %container-base;
}

// Fixed-width container that adapts at different breakpoints
.container {
  @extend %container-base;

  // Apply max-width based on breakpoints
  @each $breakpoint, $width in $breakpoints {
    // Skip the smallest breakpoint (xs: 0) as it should be 100% width initially
    @if $width > 0 {
      @media (min-width: #{$width}) {
        // Set max-width for this breakpoint and up
        // Use the actual breakpoint width as the max-width by default
        // You can customize these values if needed (e.g., make lg slightly smaller)
        max-width: $width;

        // Example customizations (optional):
        // @if $breakpoint == lg { max-width: 960px; }
        // @if $breakpoint == xl { max-width: 1140px; }
        // @if $breakpoint == xxl { max-width: 1320px; }
      }
    }
  }
}

// Responsive containers (e.g., .container-md)
// These containers are 100% wide until their specific breakpoint is reached.
@each $breakpoint, $width in $breakpoints {
  // Only create for sm and larger breakpoints
  @if $width > 0 {
    .container-#{$breakpoint} {
      @extend %container-base; // Inherit base styles

      // Apply max-width only from the specified breakpoint upwards
      @media (min-width: #{$width}) {
         max-width: $width; // Use breakpoint width as max-width
         // Optional customizations like above can be added here too
      }
    }
  }
}
